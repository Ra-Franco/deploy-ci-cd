name: Deploy Docker App to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Login no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build da imagem Docker
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/todo-app:latest .

      - name: Push da imagem Docker
        run: docker push ${{ secrets.DOCKER_USERNAME }}/todo-app:latest

      - name: Configurar chave SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Iniciar SonarQube no servidor
        run: |
          ssh -o StrictHostKeyChecking=no aluno@201.23.3.86 << 'EOF'
            docker rm -f sonar || true
            docker run -d --name sonar -p 8203:9000 sonarqube:latest

            echo "Esperando o SonarQube iniciar..."
            for i in {1..30}; do
              if curl -s http://localhost:8203/api/system/status | grep -q '"status":"UP"'; then
                echo "SonarQube está pronto."
                break
              fi
              echo "Aguardando o SonarQube subir... ($i)"
              sleep 5
            done

            if ! curl -s http://localhost:8203/api/system/status | grep -q '"status":"UP"'; then
              echo "SonarQube não subiu a tempo."
              docker stop sonar
              docker rm sonar
              exit 1
            fi
          EOF

      - name: Rodar Sonar Scanner (via Docker)
        run: |
          docker run --rm \
            -v "$(pwd):/usr/src" \
            sonarsource/sonar-scanner-cli \
            -Dsonar.projectKey=todo-app \
            -Dsonar.sources=/usr/src \
            -Dsonar.host.url=http://201.23.3.86:8203 \
            -Dsonar.login=admin \
            -Dsonar.password=admin

      - name: Deploy da aplicação no servidor
        run: |
          ssh -o StrictHostKeyChecking=no aluno@201.23.3.86 << 'EOF'
            docker stop todo-app || true
            docker rm todo-app || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/todo-app:latest
            docker run -d --name todo-app -p 8204:3000 -p 8205:4200 -p 8202:5432 ${{ secrets.DOCKER_USERNAME }}/todo-app:latest
          EOF
