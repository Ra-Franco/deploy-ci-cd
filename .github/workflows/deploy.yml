name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Login no Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build backend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/todo-backend:latest ./backend
          docker push ${{ secrets.DOCKER_USERNAME }}/todo-backend:latest

      - name: Build frontend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/todo-frontend:latest ./frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/todo-frontend:latest

  sonar-analysis:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Copiar código e docker-compose para servidor remoto
        uses: appleboy/scp-action@v0.1.4
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_KEY }}
          source: "."
          target: "~/app"

      - name: Executar análise SonarQube no servidor remoto
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker run -d --name sonarquberamon -p 8201:9000 sonarqube
            sleep 60
            docker run --rm \
              -v ~/app:/usr/src \
              -w /usr/src \
              sonarsource/sonar-scanner-cli \
              -Dsonar.projectKey=todo-projeto \
              -Dsonar.sources=. \
              -Dsonar.host.url=http://201.23.3.86:8201 \
              -Dsonar.login=admin \
              -Dsonar.password=admin
            docker stop sonarquberamon && docker rm sonarquberamon

  deploy:
    needs: sonar-analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Copiar docker-compose para servidor remoto
        uses: appleboy/scp-action@v0.1.4
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_KEY }}
          source: "./docker-compose.yml"
          target: "~/app"
          strip_components: 0

      - name: Deploy usando docker-compose no servidor remoto
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/app
            docker stop todo-frontend todo-backend todo-db || true
            docker rm todo-frontend todo-backend todo-db || true
            docker network rm todo-network 2>/dev/null || true

            docker pull ${{ secrets.DOCKER_USERNAME }}/todo-backend:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/todo-frontend:latest
            
            docker network create todo-network || true
            docker volume create postgres_data || true
            
            docker run -d \
              --name todo-db \
              --network todo-network \
              -e POSTGRES_USER=postgres \
              -e POSTGRES_PASSWORD=postgres \
              -e POSTGRES_DB=todo_db \
              -v postgres_data:/var/lib/postgresql/data \
              -p 8202:5432 \
              --restart unless-stopped \
              postgres:15
            
            sleep 10
            
            docker run -d \
              --name todo-backend \
              --network todo-network \
              -e DB_HOST=todo-db \
              -e DB_PORT=5432 \
              -e DB_USER=postgres \
              -e DB_PASSWORD=postgres \
              -e DB_NAME=todo_db \
              -p 8204:3000 \
              ${{ secrets.DOCKER_USERNAME }}/todo-backend:latest
            
            docker run -d \
              --name todo-frontend \
              --network todo-network \
              -p 8205:4200 \
              ${{ secrets.DOCKER_USERNAME }}/todo-frontend:latest
